0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'link', 'iconv' ]
2 info using npm@1.1.48
3 info using node@v0.8.6
4 verbose config file /Users/yong8/.npmrc
5 verbose config file /usr/local/etc/npmrc
6 verbose config file /usr/local/lib/node_modules/npm/npmrc
7 verbose install where,what [ '/usr/local/lib', [ 'iconv' ] ]
8 verbose read json /usr/local/lib/package.json
9 verbose read json /usr/local/lib/node_modules/express/package.json
10 verbose read json /usr/local/lib/node_modules/jsdom/package.json
11 verbose read json /usr/local/lib/node_modules/MD5/package.json
12 verbose read json /usr/local/lib/node_modules/mongoose/package.json
13 verbose read json /usr/local/lib/node_modules/npm/package.json
14 verbose read json /usr/local/lib/package.json
15 verbose cache add [ 'iconv', null ]
16 silly cache add name=undefined spec="iconv" args=["iconv",null]
17 verbose parsed url { pathname: 'iconv', path: 'iconv', href: 'iconv' }
18 silly lockFile b77bb132-iconv iconv
19 verbose lock iconv /Users/yong8/.npm/b77bb132-iconv.lock
20 silly lockFile b77bb132-iconv iconv
21 verbose addNamed [ 'iconv', '' ]
22 verbose addNamed [ null, '' ]
23 silly lockFile 7ff3175f-iconv iconv@
24 verbose lock iconv@ /Users/yong8/.npm/7ff3175f-iconv.lock
25 silly addNameRange { name: 'iconv', range: '', hasData: false }
26 verbose url raw iconv
27 verbose url resolving [ 'https://registry.npmjs.org/', './iconv' ]
28 verbose url resolved https://registry.npmjs.org/iconv
29 info retry registry request attempt 1 at 23:34:17
30 verbose etag "1ON38KLABDOR2OMNNW0Y8FOUQ"
31 http GET https://registry.npmjs.org/iconv
32 http 304 https://registry.npmjs.org/iconv
33 silly registry.get cb [ 304,
33 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
33 silly registry.get     etag: '"1ON38KLABDOR2OMNNW0Y8FOUQ"',
33 silly registry.get     date: 'Mon, 26 Nov 2012 14:33:43 GMT',
33 silly registry.get     'content-length': '0' } ]
34 verbose etag iconv from cache
35 silly addNameRange number 2 { name: 'iconv', range: '', hasData: true }
36 silly addNameRange versions [ 'iconv',
36 silly addNameRange   [ '1.0.0',
36 silly addNameRange     '1.0.1',
36 silly addNameRange     '1.1.0',
36 silly addNameRange     '1.1.1',
36 silly addNameRange     '1.1.2',
36 silly addNameRange     '1.1.3',
36 silly addNameRange     '1.2.0',
36 silly addNameRange     '1.2.1',
36 silly addNameRange     '1.2.2',
36 silly addNameRange     '1.2.3',
36 silly addNameRange     '1.2.4' ] ]
37 verbose addNamed [ 'iconv', '1.2.4' ]
38 verbose addNamed [ '1.2.4', '1.2.4' ]
39 silly lockFile 4bc752a2-iconv-1-2-4 iconv@1.2.4
40 verbose lock iconv@1.2.4 /Users/yong8/.npm/4bc752a2-iconv-1-2-4.lock
41 verbose read json /Users/yong8/.npm/iconv/1.2.4/package/package.json
42 silly lockFile 4bc752a2-iconv-1-2-4 iconv@1.2.4
43 silly lockFile 7ff3175f-iconv iconv@
44 silly resolved [ { name: 'iconv',
44 silly resolved     main: './build/Release/iconv',
44 silly resolved     version: '1.2.4',
44 silly resolved     description: 'Text recoding in JavaScript for fun and profit!',
44 silly resolved     homepage: 'https://github.com/bnoordhuis/node-iconv',
44 silly resolved     author:
44 silly resolved      { name: 'Ben Noordhuis',
44 silly resolved        email: 'info@bnoordhuis.nl',
44 silly resolved        url: 'http://bnoordhuis.nl/' },
44 silly resolved     repository:
44 silly resolved      { type: 'git',
44 silly resolved        url: 'https://github.com/bnoordhuis/node-iconv.git' },
44 silly resolved     engines: { node: '>=0.3.0' },
44 silly resolved     scripts: { install: 'node-gyp rebuild' },
44 silly resolved     gypfile: true,
44 silly resolved     readme: '# node-iconv\n\nText recoding in JavaScript for fun and profit!\n\nnode-iconv may or may not work on Windows. Please try it and report any issues\nyou have.\n\n## Installing with [npm](http://npmjs.org/)\n\n    $ npm install iconv\n\nNote that you do not need to have a copy of libiconv installed to use this\nmodule.\n\n## Compiling from source\n\n    $ git clone git://github.com/bnoordhuis/node-iconv.git\n    $ node-gyp configure build\n    $ npm install .\n\n## Usage\n\nEncode from one character encoding to another:\n\n    // convert from UTF-8 to ISO-8859-1\n    var Buffer = require(\'buffer\').Buffer;\n    var Iconv  = require(\'iconv\').Iconv;\n    var assert = require(\'assert\');\n\n    var iconv = new Iconv(\'UTF-8\', \'ISO-8859-1\');\n    var buffer = iconv.convert(\'Hello, world!\');\n    var buffer2 = iconv.convert(new Buffer(\'Hello, world!\'));\n    assert.equals(buffer.inspect(), buffer2.inspect());\n    // do something useful with the buffers\n\nLook at test.js for more examples and node-iconv\'s behaviour under error\nconditions.\n\n## Notes\n\nThings to keep in mind when you work with node-iconv.\n\n### Chunked data\n\nSay you are reading data in chunks from a HTTP stream. The logical input is a\nsingle document (the full POST request data) but the physical input will be\nspread over several buffers (the request chunks).\n\nYou must accumulate the small buffers into a single large buffer before\nperforming the conversion. If you don\'t, you will get unexpected results with\nmulti-byte and stateful character sets like UTF-8 and ISO-2022-JP.\n\n[node-buffertools](http://github.com/bnoordhuis/node-buffertools) lets you\nconcatenate buffers painlessly. See the description of `buffertools.concat()`\nfor details.\n\n### Dealing with untranslatable characters\n\nCharacters are not always translatable to another encoding. The UTF-8 string\n"ça va が", for example, cannot be represented in plain 7-bits ASCII without\nsome loss of fidelity.\n\nBy default, node-iconv throws EILSEQ when untranslatabe characters are\nencountered but this can be customized. Quoting the `iconv_open(3)` man page:\n\n    //TRANSLIT\n    When  the  string  "//TRANSLIT"  is appended to tocode, transliteration is\n    activated. This means that when a character cannot be represented in the\n    target character set, it can be approximated through one or several\n    similarly looking characters.\n\n    //IGNORE\n    When the string "//IGNORE" is appended to tocode, characters that cannot be\n    represented in the target character set will be silently discarded.\n\nExample usage:\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII\');\n    iconv.convert(\'ça va\'); // throws EILSEQ\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII//IGNORE\');\n    iconv.convert(\'ça va\'); // returns "a va"\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII//TRANSLIT\');\n    iconv.convert(\'ça va\'); // "ca va"\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII//TRANSLIT//IGNORE\');\n    iconv.convert(\'ça va が\'); // "ca va "\n\n### EINVAL\n\nEINVAL is raised when the input ends in a partial character sequence. This is a\nfeature, not a bug.\n',
44 silly resolved     _id: 'iconv@1.2.4',
44 silly resolved     _from: 'iconv' } ]
45 info install iconv@1.2.4 into /usr/local/lib
46 info installOne iconv@1.2.4
47 verbose from cache /Users/yong8/.npm/iconv/1.2.4/package/package.json
48 info /usr/local/lib/node_modules/iconv unbuild
49 verbose read json /usr/local/lib/node_modules/iconv/package.json
50 verbose tar unpack /Users/yong8/.npm/iconv/1.2.4/package.tgz
51 silly lockFile f163fc8f-usr-local-lib-node-modules-iconv /usr/local/lib/node_modules/iconv
52 verbose lock /usr/local/lib/node_modules/iconv /Users/yong8/.npm/f163fc8f-usr-local-lib-node-modules-iconv.lock
53 silly gunzTarPerm modes [ '755', '644' ]
54 error Error: EACCES, mkdir '/usr/local/lib/node_modules/iconv'
54 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/iconv']
54 error   errno: 3,
54 error   code: 'EACCES',
54 error   path: '/usr/local/lib/node_modules/iconv',
54 error   fstream_type: 'Directory',
54 error   fstream_path: '/usr/local/lib/node_modules/iconv',
54 error   fstream_class: 'DirWriter',
54 error   fstream_stack:
54 error    [ 'DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)',
54 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:51:17',
54 error      'Object.oncomplete (fs.js:297:15)' ] }
55 error Please try running this command again as root/Administrator.
56 error System Darwin 12.2.0
57 error command "node" "/usr/local/bin/npm" "link" "iconv"
58 error cwd /Users/yong8/Workspace/nailo
59 error node -v v0.8.6
60 error npm -v 1.1.48
61 error path /usr/local/lib/node_modules/iconv
62 error fstream_path /usr/local/lib/node_modules/iconv
63 error fstream_type Directory
64 error fstream_class DirWriter
65 error code EACCES
66 error errno 3
67 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/iconv'
68 error fstream_stack DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)
68 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:51:17
68 error fstream_stack Object.oncomplete (fs.js:297:15)
69 verbose exit [ 3, true ]
